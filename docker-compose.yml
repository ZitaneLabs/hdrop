# This is for local development only.
# DO NOT deploy this on a production server!

version: '3'
services:
  web:
    build:
      context: ./hdrop-web
      dockerfile: Dockerfile.development
    ports:
      - "3000:3000"
    networks:
      - hdrop
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_BASE_URL=http://localhost:3000
      - REACT_APP_API_ENDPOINT=http://localhost:8080
    volumes:
      - ./hdrop-web:/app
      - /app/node_modules
    depends_on:
      - api
  api:
    profiles: ["api-js"]
    build:
      context: ./hdrop-server-js
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    networks:
      - hdrop
      - backend
    environment:
      - PORT=80
      - S3_ACCESS_KEY_ID=dev
      - S3_SECRET_ACCESS_KEY=dev
      - S3_REGION=eu-west-1
      - S3_ENDPOINT=http://localstack:4566
      - S3_BUCKET_NAME=hdrop
      - S3_PUBLIC_URL=http://localhost:4566/hdrop
      - CORS_ORIGIN=*
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/hdrop
    platform: linux/x86_64
    depends_on:
      - postgres
      - localstack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/status"]

  api_rust:
    profiles: ["api-rs"]
    build:
      context: .
      dockerfile: ./hdrop-server/Dockerfile
    ports:
      - "8080:80"
    networks:
      - hdrop
      - backend
    environment:
      - PORT=80
      - STORAGE_PROVIDER=s3
      - S3_ACCESS_KEY_ID=dev
      - S3_SECRET_ACCESS_KEY=dev
      - S3_REGION=eu-west-1
      - S3_ENDPOINT=http://localstack:4566
      - S3_BUCKET_NAME=hdrop
      - S3_PUBLIC_URL=http://localhost:4566/hdrop
      - CORS_ORIGIN=*
      - CACHE_STRATEGY=memory
      - CACHE_MEMORY_LIMIT_MB=500
      - SINGLE_FILE_LIMIT_MB=100
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/hdrop
    depends_on:
      - postgres
      - localstack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/status"]
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
      - "4567:4567"
    networks:
      - hdrop
      - backend
    environment:
      - DEBUG=1
      - SERVICES=s3
      - AWS_ACCESS_KEY_ID=dev
      - AWS_SECRET_ACCESS_KEY=dev
      - AWS_DEFAULT_REGION=eu-west-1
      - SKIP_SSL_CERT_DOWNLOAD=1
      - EDGE_BIND_HOST=0.0.0.0
      - EXTRA_CORS_ALLOWED_ORIGINS=*
    volumes:
      - ./aws:/etc/localstack/init/ready.d
    healthcheck:
      test: ["CMD", "awslocal", "s3api", "wait", "bucket-exists", "--bucket", "hdrop"]
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    networks:
      - backend
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hdrop
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks:
      - backend
    volumes:
      - ./prometheus:/etc/prometheus
networks:
  hdrop:
  backend:
