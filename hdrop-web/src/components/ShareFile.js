import { useMemo, useState } from 'react'
import { useRecoilValue } from 'recoil'
import styled from 'styled-components'
import { Copy } from 'react-feather'

import ApiClient from '../api/ApiClient'
import { accessTokenState, passwordAutogeneratedState, passwordState } from '../state'
import CopyToClipboardWrapper from './CopyToClipboardWrapper'

const ShareFile = ({ className }) => {
    const accessToken = useRecoilValue(accessTokenState)
    const isPasswordAutogenerated = useRecoilValue(passwordAutogeneratedState)
    const password = useRecoilValue(passwordState)
    
    const [showPassword, setShowPassword] = useState(false)
    const link = useMemo(() => ApiClient.generateLink(accessToken, isPasswordAutogenerated ? password : null), [accessToken])
    const linkDisplayText = useMemo(() => link.replace(/https?:\/{2}/, ''), [link])

    const passwordText = useMemo(() => {
        return showPassword ? password : '*'.repeat(password?.length)
    }, [password, showPassword, isPasswordAutogenerated])

    return (
        <div className={className}>
            <CopyToClipboardWrapper label="Link" value={link} offset={-0.5}>
                <div className="link">
                    <a href={link} target="_blank" rel="noreferrer" onClick={e => e.preventDefault()}>
                        {linkDisplayText}
                    </a>
                    <Copy size={20} />
                </div>
            </CopyToClipboardWrapper>

            <CopyToClipboardWrapper label="Password" value={password} offset={-0.5}>
                <div className="password" onMouseEnter={() => setShowPassword(true)} onMouseLeave={() => setShowPassword(false)}>
                    <div className="password__label">Password</div>
                    <div className="password__value">
                        {passwordText}
                        <Copy size={14} />
                    </div>
                </div>
            </CopyToClipboardWrapper>
        </div>
    )
}

export default styled(ShareFile)`
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: hsl(0, 0%, 90%);
    pointer-events: all;
    gap: 2rem;

    & > * > * > .link {
        display: flex;
        align-items: center;
        gap: .5rem;
        background: hsl(0, 0%, 10%);
        border-radius: 0.5rem;
        padding: 1rem;

        a {
            color: inherit;
            text-decoration: none;
            user-select: text;
        }
    }

    & > .copy {
        color: hsl(0, 0%, 90%);
        font-size: .75rem;
        cursor: pointer;
        margin-top: .5rem;
    }

    & .password {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: .5rem;
        font-size: .9rem;
        width: 100%;

        &__label {
            user-select: none;
            cursor: default;
        }

        &__value {
            display: flex;
            align-items: center;
            gap: .25rem;
            background: hsl(0, 0%, 10%);
            border-radius: 0.25rem;
            padding: 0.25rem 0.33rem;
            font-size: .9rem;
            user-select: text;
        }
    }
`