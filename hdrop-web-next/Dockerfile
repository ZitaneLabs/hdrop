#
# Build env
#

FROM node:19-alpine

WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH

COPY package.json ./
COPY tsconfig.json ./
COPY yarn.lock ./
RUN yarn --frozen-lockfile

ARG NEXT_PUBLIC_APP_NAME
ARG NEXT_PUBLIC_WEB_BASE_URL
ARG NEXT_PUBLIC_API_BASE_URL
ARG NEXT_PUBLIC_PBKDF2_ITERATIONS
ARG NEXT_PUBLIC_PASSWORD_BYTES
ARG NEXT_PUBLIC_CHALLENGE_BYTES

ENV NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME}
ENV NEXT_PUBLIC_WEB_BASE_URL=${NEXT_PUBLIC_WEB_BASE_URL}
ENV NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
ENV NEXT_PUBLIC_PBKDF2_ITERATIONS=${NEXT_PUBLIC_PBKDF2_ITERATIONS}
ENV NEXT_PUBLIC_PASSWORD_BYTES=${NEXT_PUBLIC_PASSWORD_BYTES}
ENV NEXT_PUBLIC_CHALLENGE_BYTES=${NEXT_PUBLIC_CHALLENGE_BYTES}

COPY public ./public
COPY src ./src
RUN yarn build

#
# Production env
#

FROM nginx:alpine

COPY --from=0 /app/dist /usr/share/nginx/html
COPY infra/nginx/nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
